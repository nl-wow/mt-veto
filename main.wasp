app MTMapVeto {
  wasp: {
    version: "^0.13.0"
  },
  title: "MTMapVeto",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id     Int  @id @default(autoincrement())
    team   Team @relation(fields: [teamId], references: [id])
    teamId Int
psl=}

entity Team {=psl
    id           Int    @id @default(autoincrement())
    name         String @unique
    code         String @unique
    gamesAsTeamA Game[] @relation(name: "teamA")
    gamesAsTeamB Game[] @relation(name: "teamB")
    User         User[]
psl=}

entity Game {=psl
    id             Int  @id @default(autoincrement())
    teamA          Team @relation(name: "teamA", fields: [teamAId], references: [id])
    teamAId        Int
    teamB          Team @relation(name: "teamB", fields: [teamBId], references: [id])
    teamBId        Int
    currentPickBan Int  @default(0)
psl=}

action createGame {
  fn: import { createGame } from "@src/actions.js",
  entities: [Game]
}

action joinGame {
  fn: import { joinGame } from "@src/actions.js",
  entities: [User, Game]
}

action pickBanMap {
  fn: import { pickBanMap } from "@src/actions.js",
  entities: [Game]
}

query getGame {
  fn: import { getGame } from "@src/queries.js",
  entities: [Game]
}

query getTeam {
  fn: import { getTeam } from "@src/queries.js",
  entities: [Team]
}

route AdminRoute { path: "/admin", to: AdminPage }
page AdminPage {
  component: import AdminPage from "@src/pages/Admin.jsx",
  authRequired: true
}

route TeamRoute { path: "/team/:code", to: TeamPage }
page TeamPage {
  component: import TeamPage from "@src/pages/Team.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}